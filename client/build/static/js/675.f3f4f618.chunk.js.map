{"version":3,"file":"static/js/675.f3f4f618.chunk.js","mappings":"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","sources":["components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nconst subColor = css`\r\n  grey;\r\n`;\r\n\r\nconst mainColor = css`\r\n  black;\r\n`;\r\n\r\nconst shrinkLabel = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const FormInputGroup = styled.div`\r\n  position: relative;\r\n  margin: 45px 0;\r\n\r\n  input[type=\"password\"] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n\r\n  &.shrink {\r\n    ${shrinkLabel};\r\n  }\r\n`;\r\n\r\nexport const FormInputTag = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:focus ~ ${FormInputLabel} {\r\n    ${shrinkLabel};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  FormInputGroup,\r\n  FormInputTag,\r\n  FormInputLabel,\r\n} from \"./form-input.styles\";\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => {\r\n  return (\r\n    <FormInputGroup>\r\n      <FormInputTag onChange={handleChange} {...otherProps} />\r\n      {label ? (\r\n        <FormInputLabel\r\n          className={`${\r\n            otherProps.value.length ? \"shrink\" : \"\"\r\n          } form-input-label`}\r\n        >\r\n          {label}\r\n        </FormInputLabel>\r\n      ) : null}\r\n    </FormInputGroup>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignInContainer = styled.div`\r\n  width: 25vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .title {\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n\r\nexport const SignInButtons = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport { SignInContainer, SignInButtons } from \"./sign-in.styles\";\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart,\r\n} from \"../../redux/user/user.actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userCredentials, setCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = userCredentials;\r\n\r\n  const hadleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    setCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignInContainer>\r\n      <h2>I Aready Have an Account</h2>\r\n      <span>Sign In With Your Email And Password</span>\r\n\r\n      <form onSubmit={hadleSubmit}>\r\n        <FormInput\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={email}\r\n          handleChange={handleChange}\r\n          label=\"Email\"\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          handleChange={handleChange}\r\n          label=\"Password\"\r\n          required\r\n        />\r\n\r\n        <SignInButtons>\r\n          <CustomButton type=\"submit\">Sign In</CustomButton>\r\n          <CustomButton\r\n            type=\"button\"\r\n            onClick={googleSignInStart}\r\n            isGoogleSignIn\r\n          >\r\n            Sign In With Google\r\n          </CustomButton>\r\n        </SignInButtons>\r\n      </form>\r\n    </SignInContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n","import styled from 'styled-components'\r\n\r\nexport const SignUpContainer = styled.div`\r\ndisplay: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n\r\n  .title {\r\n    margin: 10px 0;\r\n  }\r\n`","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport { signUpStart } from \"../../redux/user/user.actions\";\r\nimport { SignUpContainer } from \"./sign-up.styles\";\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      alert(`Password Don't Match`);\r\n      return;\r\n    }\r\n\r\n    signUpStart({ displayName, email, password });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <h2 className=\"title\">I Do Not Have An Account</h2>\r\n      <span>Sign Up with Your Email and Password</span>\r\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          value={displayName}\r\n          onChange={handleChange}\r\n          label=\"Display Name\"\r\n          required\r\n        ></FormInput>\r\n\r\n        <FormInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          label=\"Email\"\r\n          required\r\n        ></FormInput>\r\n\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n          label=\"Password\"\r\n          required\r\n        ></FormInput>\r\n\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          label=\"Confirm Password\"\r\n          required\r\n        ></FormInput>\r\n\r\n        <CustomButton type=\"submit\">Sign Up</CustomButton>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignInAndSignUpContainer = styled.div`\r\nwidth: 850px;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nmargin: 30px auto;\r\n`;\r\n  ","import React from 'react';\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\nimport {SignInAndSignUpContainer} from './sign-in-and-sign-up.styles';\r\n\r\nconst SignInAndSignUpPage = () => {\r\n    return(\r\n        <SignInAndSignUpContainer>\r\n            <SignIn />\r\n            <SignUp />\r\n        </SignInAndSignUpContainer>\r\n    );\r\n}\r\n\r\nexport default SignInAndSignUpPage;"],"names":["subColor","css","_templateObject","_taggedTemplateLiteral","mainColor","_templateObject2","shrinkLabel","_templateObject3","FormInputGroup","styled","div","_templateObject4","FormInputLabel","label","_templateObject5","FormInputTag","input","_templateObject6","_ref","handleChange","otherProps","_jsxs","children","_jsx","onChange","className","concat","value","length","SignInContainer","SignInButtons","connect","dispatch","googleSignInStart","emailSignInStart","email","password","userCredentials","setCredentials","useState","event","name","target","onSubmit","async","preventDefault","FormInput","type","required","CustomButton","onClick","isGoogleSignIn","SignUpContainer","signUpStart","setUserCredentials","displayName","confirmPassword","alert","SignInAndSignUpContainer","SignInAndSignUpPage","SignIn","SignUp"],"sourceRoot":""}