{"version":3,"file":"static/js/85.746321a3.chunk.js","mappings":"uMAGO,MAAMA,EAAsBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4HAQhCC,GAAsBJ,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAoBM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wPAgB1CI,EAA0BP,EAAAA,GAAOC,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,0bAS3CJ,EAGAK,EAUEL,EAGAK,GAOKK,EAAmBT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,kHAQ7BQ,EAAuBX,EAAAA,GAAOY,KAAIC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iDAKlCW,EAAwBd,EAAAA,GAAOY,KAAIG,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,yB,cC3DhD,MAoBA,GAAea,EAAAA,EAAAA,IAAQ,MAJKC,IAAQ,CAClCC,QAAUC,GAASF,GAASC,EAAAA,EAAAA,IAAQC,OAGtC,EApBuBC,IAAwB,IAAvB,KAAED,EAAI,QAAED,GAASE,EACvC,MAAM,KAAEC,EAAI,MAAEC,EAAK,SAAEC,GAAaJ,EAClC,OACEK,EAAAA,EAAAA,MAACjB,EAAuB,CAAAkB,SAAA,EACtBC,EAAAA,EAAAA,KAAC3B,EAAmB,CAAC4B,MAAO,CAAEC,gBAAgB,OAADC,OAASN,EAAQ,SAC9DC,EAAAA,EAAAA,MAACf,EAAgB,CAAAgB,SAAA,EACfC,EAAAA,EAAAA,KAACf,EAAoB,CAAAc,SAAEJ,KACvBK,EAAAA,EAAAA,KAACZ,EAAqB,CAAAW,SAAEH,QAE1BI,EAAAA,EAAAA,KAACtB,EAAmB,CAAC0B,QAASA,IAAMZ,EAAQC,GAAOY,UAAQ,EAAAN,SAAC,kBAGpC,G,iECtB9B,MAIA,EAJqBO,GAAqBZ,IAAmC,IAAlC,UAAEa,KAAcC,GAAYd,EACrE,OAAOa,GAAYP,EAAAA,EAAAA,KAACS,EAAAA,EAAO,KAAMT,EAAAA,EAAAA,KAACM,EAAgB,IAAKE,GAAc,C,mJCFhE,MAAME,EAAsBpC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uDAKhCkC,EAAkBrC,EAAAA,GAAOC,IAAGK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,mJAU5BmC,EAAkBtC,EAAAA,GAAOuC,GAAE/B,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,sD,cCNxC,MAuBA,GAAea,EAAAA,EAAAA,KAJSwB,CAACC,EAAOC,KAAQ,CACtCC,YAAYC,EAAAA,EAAAA,IAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGnE,EAvBuBrB,IAAqB,IAApB,WAAEuB,GAAYvB,EAMpC,MAAM,MAAE4B,EAAK,MAAEC,GAAUN,EACzB,OACEnB,EAAAA,EAAAA,MAACY,EAAmB,CAAAX,SAAA,EAClBC,EAAAA,EAAAA,KAACY,EAAe,CAACY,UAAU,QAAOzB,SAAEuB,KACpCtB,EAAAA,EAAAA,KAACW,EAAe,CAAAZ,SACbwB,EAAME,KAAKhC,IACVO,EAAAA,EAAAA,KAAC0B,EAAAA,EAAc,CAAejC,KAAMA,GAAfA,EAAKkC,UAGV,IClBpBb,GAAkBc,EAAAA,EAAAA,IAAyB,CAC/CrB,UAAYQ,KAAWc,EAAAA,EAAAA,IAAyBd,KAQlD,GALiCe,EAAAA,EAAAA,KAC/BxC,EAAAA,EAAAA,IAAQwB,GACRiB,EAAAA,EAF+BD,CAG/BE,E","sources":["components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","components/with-spinner/with-spinner.component.jsx","pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nexport const CollectionItemImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const CustomButtonStyling = styled(CustomButton)`\r\n  z-index: 10;\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    ${CollectionItemImage} {\r\n      opacity: 0.8;\r\n    }\r\n    ${CustomButtonStyling} {\r\n      opacity: 0.85;\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      ${CollectionItemImage} {\r\n        opacity: unset;\r\n      }\r\n      ${CustomButtonStyling} {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CollectionFooter = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const CollectionFooterName = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const CollectionFooterPrice = styled.span`\r\n  width: 10%;\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addItem } from \"../../redux/cart/cart.actions\";\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionItemImage,\r\n  CollectionFooter,\r\n  CollectionFooterName,\r\n  CollectionFooterPrice,\r\n  CustomButtonStyling,\r\n} from \"./collection-item.styles\";\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n  return (\r\n    <CollectionItemContainer>\r\n      <CollectionItemImage style={{ backgroundImage: `url(${imageUrl})` }} />\r\n      <CollectionFooter>\r\n        <CollectionFooterName>{name}</CollectionFooterName>\r\n        <CollectionFooterPrice>{price}</CollectionFooterPrice>\r\n      </CollectionFooter>\r\n      <CustomButtonStyling onClick={() => addItem(item)} inverted>\r\n        Add To Cart\r\n      </CustomButtonStyling>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);\r\n","import React from \"react\";\r\nimport Spinner from \"../spinner/spinner.component\";\r\n\r\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\r\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CollectionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const CollectionItems = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n\r\n  & .collection-item {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nexport const CollectionTitle = styled.h2`\r\n  font-size: 38px;\r\n  margin: 0 auto 30px;\r\n`;\r\n","import React /*, { useEffect }*/ from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\r\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\r\n\r\nimport {\r\n  CollectionContainer,\r\n  CollectionItems,\r\n  CollectionTitle,\r\n} from \"./collection.styles\";\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n  // useEffect(() => {\r\n  //   return () => {  // It is a cleanup component and it is called when our component is unmounted\r\n  //   }\r\n  // })\r\n\r\n  const { title, items } = collection;\r\n  return (\r\n    <CollectionContainer>\r\n      <CollectionTitle className=\"title\">{title}</CollectionTitle>\r\n      <CollectionItems>\r\n        {items.map((item) => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </CollectionItems>\r\n    </CollectionContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n","import { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { compose } from \"redux\";\r\n\r\nimport { selectIsCollectionLoaded } from \"../../redux/shop/shop.selectors\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\nimport CollectionPage from \"./collection.component\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: (state) => !selectIsCollectionLoaded(state),\r\n});\r\n\r\nconst CollectionsPageContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionsPageContainer;\r\n"],"names":["CollectionItemImage","styled","div","_templateObject","_taggedTemplateLiteral","CustomButtonStyling","CustomButton","_templateObject2","CollectionItemContainer","_templateObject3","CollectionFooter","_templateObject4","CollectionFooterName","span","_templateObject5","CollectionFooterPrice","_templateObject6","connect","dispatch","addItem","item","_ref","name","price","imageUrl","_jsxs","children","_jsx","style","backgroundImage","concat","onClick","inverted","WrappedComponent","isLoading","otherProps","Spinner","CollectionContainer","CollectionItems","CollectionTitle","h2","mapStateToProps","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","className","map","CollectionItem","id","createStructuredSelector","selectIsCollectionLoaded","compose","WithSpinner","CollectionPage"],"sourceRoot":""}