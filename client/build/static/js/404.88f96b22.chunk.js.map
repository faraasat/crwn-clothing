{"version":3,"file":"static/js/404.88f96b22.chunk.js","mappings":"6NAWA,MAAMA,GAA+BC,EAAAA,EAAAA,OAAK,IACxC,+BAEIC,GAA2BD,EAAAA,EAAAA,OAAK,IACpC,+BA+BIE,GAAkBC,EAAAA,EAAAA,IAAyB,CAC/CC,qBAAsBC,EAAAA,GACtBC,mBAAoBC,EAAAA,KAOtB,GAAeC,EAAAA,EAAAA,IAAQN,GAJKO,IAAQ,CAClCC,sBAAuBA,IAAMD,GAASC,EAAAA,EAAAA,UAGxC,EArCiBC,IAAuC,IAAtC,sBAAED,EAAqB,MAAEE,GAAOD,EAWhD,OANAE,EAAAA,EAAAA,YAAU,KACRH,GAAuB,GACtB,CAACA,KAKFI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAACC,UAAUL,EAAAA,EAAAA,KAACM,EAAAA,EAAO,IAAIJ,SAAA,EAC9BF,EAAAA,EAAAA,KAACO,EAAAA,GAAK,CACJC,OAAK,EACLC,KAAI,GAAAC,OAAKZ,EAAMW,MACfE,UAAW1B,KAEbe,EAAAA,EAAAA,KAACO,EAAAA,GAAK,CACJE,KAAI,GAAAC,OAAKZ,EAAMW,KAAI,kBACnBE,UAAWxB,QAGX,G,4ECxCV,MAAMyB,EAAcC,GAAUA,EAAMC,KAEvBC,GAAoBC,EAAAA,EAAAA,IAC/B,CAACJ,IACAE,GAASA,EAAKG,cAGJC,GAA8BF,EAAAA,EAAAA,IACzC,CAACD,IACAE,GACCA,EAAcE,OAAOC,KAAKH,GAAaI,KAAKC,GAAQL,EAAYK,KAAQ,KAG/DC,EAAoBC,IAC/BR,EAAAA,EAAAA,IAAe,CAACD,IAAqBE,GACnCA,EAAcA,EAAYO,GAAsB,OAGvCjC,GAA6ByB,EAAAA,EAAAA,IACxC,CAACJ,IACAE,GAASA,EAAKW,aAGJhC,GAA2BuB,EAAAA,EAAAA,IACtC,CAACJ,IACAE,KAAWA,EAAKG,a","sources":["pages/shop/shop.component.jsx","redux/shop/shop.selectors.js"],"sourcesContent":["import React, { lazy, Suspense, useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\r\nimport {\r\n  selectIsCollectionFetching,\r\n  selectIsCollectionLoaded,\r\n} from \"../../redux/shop/shop.selectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\n\r\nconst CollectionsOverviewContainer = lazy(() =>\r\n  import(\"../../components/collections-overview/collection-overview.container\")\r\n);\r\nconst CollectionsPageContainer = lazy(() =>\r\n  import(\"../../pages/collection/collection.container\")\r\n);\r\n\r\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\r\n  // componentDidMount() {\r\n  //   fetchCollectionsStart();\r\n  // }\r\n\r\n  useEffect(() => {\r\n    fetchCollectionsStart();\r\n  }, [fetchCollectionsStart]);\r\n  // Anything we pass in this array means that only render useEffect when anything in array is rerendered or changed if we donot pass array it will render infinitely and if we pass empty array it will act as componentWillUnmount\r\n\r\n  // Since we have used route in app.js so it passes the match from there and match provide current path. It also passes location and history\r\n  return (\r\n    <div className=\"shop-page\">\r\n      <Suspense fallback={<Spinner />}>\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          component={CollectionsOverviewContainer}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          component={CollectionsPageContainer}\r\n        />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionFetching: selectIsCollectionFetching,\r\n  isCollectionLoaded: selectIsCollectionLoaded,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectShop = (state) => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  (collections) =>\r\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = (collectionUrlParam) =>\r\n  createSelector([selectCollections], (collections) =>\r\n    collections ? collections[collectionUrlParam] : null\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionLoaded = createSelector(\r\n  [selectShop],\r\n  (shop) => !!shop.collections\r\n);\r\n"],"names":["CollectionsOverviewContainer","lazy","CollectionsPageContainer","mapStateToProps","createStructuredSelector","isCollectionFetching","selectIsCollectionFetching","isCollectionLoaded","selectIsCollectionLoaded","connect","dispatch","fetchCollectionsStart","_ref","match","useEffect","_jsx","className","children","_jsxs","Suspense","fallback","Spinner","Route","exact","path","concat","component","selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","isFetching"],"sourceRoot":""}